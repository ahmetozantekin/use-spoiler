{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","text","blur","arguments","_useState","_useState2","textState","_useState3","_useState4","blurState","setBlurState","effectedClass","filter","cursor","createElement","style","onClick","App","id","useSpoiler","ReactDOM","render","document","getElementById"],"mappings":"mMAEA,SAASA,EAAeC,EAAKC,GAC3B,OAGF,SAAyBD,GACvB,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EAJxBI,CAAgBJ,IAOzB,SAA+BA,EAAKC,GAClC,KAAMI,OAAOC,YAAYC,OAAOP,IAAgD,uBAAxCO,OAAOC,UAAUC,SAASC,KAAKV,IACrE,OAGF,IAAIW,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKjB,EAAIK,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETpB,GAAKU,EAAKW,SAAWrB,GAH8CW,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EAlCwBa,CAAsBxB,EAAKC,IAqC5D,WACE,MAAM,IAAIwB,UAAU,wDAtC4CC,GAyClE,IAAI,EAAa,SAAoBC,GACnC,IAAIC,EAAOC,UAAUP,OAAS,QAAsBP,IAAjBc,UAAU,GAAmBA,UAAU,GAAK,EAE3EC,EAAY,mBAASH,GACrBI,EAAahC,EAAe+B,EAAW,GACvCE,EAAYD,EAAW,GAEvBE,EAAa,mBAASL,GACtBM,EAAanC,EAAekC,EAAY,GACxCE,EAAYD,EAAW,GACvBE,EAAeF,EAAW,GAE1BG,EAAgB,CAClBC,OAAQ,QAAUH,EAAY,MAC9BI,OAAQ,WAEV,OAAO,IAAMC,cAAc,OAAQ,CACjCC,MAAOJ,EACPK,QAAS,WACPN,EAAaD,EAAY,KAE1BH,ICrDUW,EATH,WACV,OACE,yBAAKC,GAAG,WACN,sDAA4BC,EAAW,kBAAvC,4BACA,gCAAMA,EAAW,iFAAkF,IACnG,4BAAIA,EAAW,gBAAgB,IAA/B,+CCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.29a84f0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nvar useSpoiler = function useSpoiler(text) {\n  var blur = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n  var _useState = useState(text),\n      _useState2 = _slicedToArray(_useState, 1),\n      textState = _useState2[0];\n\n  var _useState3 = useState(blur),\n      _useState4 = _slicedToArray(_useState3, 2),\n      blurState = _useState4[0],\n      setBlurState = _useState4[1];\n\n  var effectedClass = {\n    filter: 'blur(' + blurState + 'px)',\n    cursor: 'pointer'\n  };\n  return React.createElement(\"span\", {\n    style: effectedClass,\n    onClick: function onClick() {\n      setBlurState(blurState = 0);\n    }\n  }, textState);\n};\n\nexport { useSpoiler };","import React from 'react'\nimport { useSpoiler } from 'use-spoiler'\n\nconst App = () => {\n  return (\n    <div id='example'>\n      <p>Suspect Verbal Kint was {useSpoiler('Keyser SÃ¶ze')} since in the beginning.</p>\n      <h2> {useSpoiler('Narrator and Tyler Durden are actually playing two sides of the same character', 5)}</h2>\n      <p>{useSpoiler('Bruce Willis'),10} was a ghost that only one kid could see.</p>\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}